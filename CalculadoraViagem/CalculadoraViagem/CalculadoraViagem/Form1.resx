<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KIkACEWEAP/Z
</value>
  </data>
</root>